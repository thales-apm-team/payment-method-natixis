import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.3"
    id "org.sonarqube" version "2.8"
    id "org.owasp.dependencycheck" version "5.2.2"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'jacoco'

def externalFileName = "$projectDir/.external"
if (file(externalFileName).exists()) {
    apply from: "external.gradle"
} else {
    apply from: "monext.gradle"
}

description = 'payment-method-natixis'
group = 'com.payline.payment.scti-natixis'
version = '1.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

ext {
    paymentMethodApiVersion = '1.7-SNAPSHOT'
    //paymentMethodIntegrationVersion = '1.4'
}

dependencies {
    compile group:'com.payline', name: 'payment-method-api', version: "$paymentMethodApiVersion"
    //testImplementation group: 'com.payline', name: 'payment-method-integration', version: "$paymentMethodIntegrationVersion"

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'
    implementation group: 'org.tomitribe', name: 'tomitribe-http-signatures', version: '1.3'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.0'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'

    testRuntime group: 'commons-lang', name: 'commons-lang', version: '2.6' // Required by Buyer.FullName#toString
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Build-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Source-Compatibility': project.sourceCompatibility,
                'Target-Compatibility': project.targetCompatibility
        )
    }
}

assemble.dependsOn shadowJar

shadowJar {
    classifier = ''
    dependencies {
        exclude(dependency('com.payline:payment-method-api'))
        exclude(dependency('org.apache.logging.log4j:log4j-api:2.11.0'))
        exclude(dependency('org.apache.logging.log4j:log4j-core:2.11.0'))

        exclude(dependency('org.junit.jupiter:junit-jupiter-params'))
        exclude(dependency('org.junit.jupiter:junit-jupiter-api'))
        exclude(dependency('org.seleniumhq.selenium:selenium-server'))
        exclude(dependency('org.seleniumhq.selenium:selenium-support'))
    }
}

processResources {
    // Replace tokens in release.properties file by their real value
    filesMatching('release.properties') {
        filter(ReplaceTokens, tokens: [
                'version': project.version.replaceFirst("-.*", ""),
                'date'   : new Date().format("dd/MM/yyyy")
        ])
    }
}

test {
    useJUnitPlatform()
    exclude('**/*IT.class')
}
